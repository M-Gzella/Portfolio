"use strict";var menu_items,theme_btn,body,wrapper,hamburger_btn,close_menu_btn,menu_mobile,menu_options_mobile,slide_hover_btns,slider_btn_next,slider_btn_prev,slider,sliders,skill_cards,sections,dots,root,currentSlide=0,startX=null,startY=0,mediaQuery=window.matchMedia("(max-width: 480px)"),main=function(){prepareDOMElements(),prepareDOMEvents(),setTheme()},prepareDOMElements=function(){theme_btn=document.querySelector(".theme_btn"),body=document.querySelector("body"),hamburger_btn=document.querySelector(".hamburger_btn"),close_menu_btn=document.querySelector(".close_menu"),menu_mobile=document.querySelector(".menu_mobile"),menu_options_mobile=document.querySelectorAll(".menu_mobile li"),root=document.documentElement,sections=document.querySelectorAll(".wrapper .section"),dots=document.querySelectorAll(".global_nav ul li a"),menu_items=document.querySelectorAll("a.menu"),slide_hover_btns=document.querySelectorAll(".slide a"),slider_btn_prev=document.querySelector(".prev_btn"),slider_btn_next=document.querySelector(".next_btn"),sliders=document.querySelectorAll(".slide"),slider=document.querySelector(".slider"),wrapper=document.querySelector(".wrapper"),skill_cards=document.querySelectorAll(".skill_card")},prepareDOMEvents=function(){theme_btn.addEventListener("click",changeTheme),hamburger_btn.addEventListener("click",menuHandler),close_menu_btn.addEventListener("click",menuHandler),menu_options_mobile.forEach(function(e){return e.addEventListener("click",menuHandler)}),window.addEventListener("wheel",throttledWheel),wrapper.addEventListener("touchstart",function(e){e=e.touches[0];startY=e.clientY}),wrapper.addEventListener("touchmove",throttledTouch),dots.forEach(function(e){return e.addEventListener("click",dotActiveHandler)}),menu_items.forEach(function(e){return e.addEventListener("click",menuItemActiveHandler)}),slide_hover_btns.forEach(function(e){return e.addEventListener("mouseover",hoverOver)}),slide_hover_btns.forEach(function(e){return e.addEventListener("mouseout",hoverOut)}),slider_btn_next.addEventListener("click",nextSlide),slider_btn_prev.addEventListener("click",prevSlide),slider.addEventListener("touchstart",function(e){startX=e.touches[0].clientX}),slider.addEventListener("touchmove",throttledDeltaX),slider.addEventListener("touchend",function(){startX=null}),mediaQuery.matches&&skill_cards.forEach(function(e){return e.addEventListener("click",throttledSkillCard)})},changeTheme=function(){var e;"light_theme"===body.classList.value?(e=JSON.parse(localStorage.getItem("theme")),body.classList.remove("light_theme"),body.classList.add("dark_theme"),e=body.classList.value,rootColorsDark(),localStorage.setItem("theme",JSON.stringify(e))):"dark_theme"===body.classList.value&&(e=JSON.parse(localStorage.getItem("theme")),body.classList.remove("dark_theme"),body.classList.add("light_theme"),e=body.classList.value,rootColorsLight(),localStorage.setItem("theme",JSON.stringify(e)))},rootColorsLight=function(){root.style.setProperty("--main-theme","#6FDCBF"),root.style.setProperty("--accent-theme","#F6F4F6"),root.style.setProperty("--text-theme","#404040")},rootColorsDark=function(){root.style.setProperty("--main-theme","#774069"),root.style.setProperty("--accent-theme","#29272A"),root.style.setProperty("--text-theme","#FAFAFA")},menuHandler=function(){menu_mobile.classList.toggle("show")},dotActiveHandler=function(e){var t=e.target.getAttribute("href").slice(1);sections.forEach(function(e){e.classList.remove("active"),t===e.id&&e.classList.add("active")}),dots.forEach(function(e){e.classList.remove("active")}),e.target.classList.toggle("active")},checkActiveMenuItems=function(t){sections.forEach(function(e){e.classList.remove("active"),t===e.id&&e.classList.add("active")}),dots.forEach(function(e){e.classList.remove("active"),t===e.getAttribute("href").slice(1)&&e.classList.add("active")})},menuItemActiveHandler=function(e){e=e.target.getAttribute("href").slice(1);checkActiveMenuItems(e)},getCurrentSectionDesktop=function(e){var r,t=sections.length;return sections.forEach(function(e,t){e=e.getBoundingClientRect();e.top<=.5&&.5<=e.bottom&&(r=t)}),{key:e=checkScrollUp(e)?0===r?0:r-1:r===t-1?t-1:r+1,next:sections[e]}};function getCurrentSectionMobile(e){var r,t,e=e.touches[0].clientY-startY,n=sections.length;return sections.forEach(function(e,t){e=e.getBoundingClientRect();e.top<=.5&&.5<=e.bottom&&(r=t)}),20<e?t=0===r?0:r-1:e<-20&&(t=r===n-1?n-1:r+1),{key:t,next:sections[t]}}var sectionActiveHandler=function(t){sections.forEach(function(e){t.id===e.id?e.classList.add("active"):e.classList.remove("active")})},dotScrollActiveHandler=function(r){dots.forEach(function(e,t){r.key===t?e.classList.add("active"):e.classList.remove("active")})},handleActiveSectionDesktop=function(e){var e=getCurrentSectionDesktop(e),t=e.next;sectionActiveHandler(t),dotScrollActiveHandler(e),window.location.hash=t.id,window.scrollTo({behavior:"smooth",top:t.offsetTop})},handleActiveSectionMobile=function(e){var e=getCurrentSectionMobile(e),t=e.next;sectionActiveHandler(t),dotScrollActiveHandler(e),window.location.hash=t.id,window.scrollTo({behavior:"smooth",top:t.offsetTop})},checkScrollUp=function(e){return e.wheelDelta?0<e.wheelDelta:e.deltaY<0},hoverOver=function(e){e.target.closest(".slide").classList.add("hover")},hoverOut=function(e){e.target.closest(".slide").classList.remove("hover")},nextSlide=function(){var e=sliders[currentSlide].offsetWidth;currentSlide<sliders.length-1?(e=(e+20)*++currentSlide,slider.style.transform="translateX(-".concat(e,"px)")):(slider.style.transform="translateX(0)",currentSlide=0)},prevSlide=function(){var e=sliders[currentSlide].offsetWidth,t=parseInt(slider.style.transform.slice(11,-3));0<currentSlide&&(currentSlide--,slider.style.transform="translateX(".concat(t+e+20,"px)"))},checkDeltaX=function(e){null!==startX&&(0<e.touches[0].clientX-startX?prevSlide:nextSlide)()},skillCardHandler=function(e){var t=e.target.getAttribute("data-id"),r=e.target;r.classList.contains("active")?(r.style.transform="translateY(0)",skill_cards.forEach(function(e){e.classList.remove("hide"),e.classList.remove("active")})):(skill_cards.forEach(function(e){e.getAttribute("data-id")===t?r.classList.add("active"):e.classList.add("hide")}),skillCardMoveHandle(t,r))},skillCardMoveHandle=function(e,t){var r=parseInt(t.offsetHeight)+60;switch(e){case"0":setTimeout(function(){t.style.transform="translateY(0)"},300);break;case"1":setTimeout(function(){t.style.transform="translateY(-".concat(r,"px)")},300);break;case"2":setTimeout(function(){t.style.transform="translateY(-".concat(2*r,"px)")},300)}};function throttle(t,r){var n=0;return function(){var e=Date.now();r<=e-n&&(t(event),n=e)}}var throttledWheel=throttle(handleActiveSectionDesktop,500),throttledTouch=throttle(handleActiveSectionMobile,500),throttledDeltaX=throttle(checkDeltaX,500),throttledSkillCard=throttle(skillCardHandler,500),setTheme=function(){var e=JSON.parse(localStorage.getItem("theme"));0===e.length?e=body.classList.value:"dark_theme"===(body.classList.value=e)?rootColorsDark():"light_theme"===e&&rootColorsLight(),localStorage.setItem("theme",JSON.stringify(e))},checkJSON=function(e){try{JSON.parse(e)}catch(e){return!1}return!0};document.addEventListener("DOMContentLoaded",main),window.addEventListener("load",function(e){var t;window.location.href.includes("#")&&(t=window.location.href.split("#")[1],checkActiveMenuItems(t))}),window.addEventListener("DOMContentLoaded",function(){var e;localStorage.getItem("theme")&&0!==(e=localStorage.getItem("theme")).length&&checkJSON(e)&&Array.isArray(JSON.parse(e))||localStorage.setItem("theme",JSON.stringify([])),setTheme()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
